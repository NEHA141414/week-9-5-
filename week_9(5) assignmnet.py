# -*- coding: utf-8 -*-
"""week 9(5).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n2jwhSy1m___fy5cKoDabKzCbwTSbSrs

Q-1 How can you create a bokeh plot using python code?
"""

import bokeh.io
import bokeh.plotting
bokeh.io.output_notebook()

pip install bokeh

from bokeh.plotting import figure ,output_file , show
from bokeh.sampledata.iris import flowers

output_file('test.html')
p=figure(title="test flower")
p.xaxis.axis_label="petal length"
p.yaxis.axis_label="petal width"
p.circle(flowers['petal_length'],flowers['petal_width'])
show(p)

flowers

"""Q-2 What are glyphs in bokeh ,and how can you add them to a bokeh plot? Explain with an example.

Ans-2 In bokeh , glyphs refer to the visual markers used to represent data points on a plot , such as circles, squares ,lines, and other shapes. They are essentially the building blocks for creating visualizations.

TO add glyphs to a bokeh plot ,you typically use the 'figure' object and a specific glyphs method(e.g ,'circle()', line() etc.
"""

p=figure(width=400, height=400)
x_values=[1,2,3,4,5]
y_values=[6,7,2,4,6]

p.circle(x=x_values,y=y_values ,size=10, color="blue",alpha=1)
output_file("circle_plot.html")
show(p)

"""Q-3 How can you customize the appearance of a bokeh plot ,including the axes ,title,and legend?"""

x=[1,2,3,4,5,6]
y=[3,4,5,6,7]
output_file("line.html")
p=figure(title="line plot")
p.scatter(x,y,fill_color='black', legend_label='blue points',size=30)
show(p)

"""Q-4 What is a bokeh server ,and how can you use it to create interactive plots that can be updated in real time?

Ans-4 Bokeh server is a component of the bokeh library that allows you to create and deploy interactive web application with real-time updating capabilities .It enables you to build dynamic , data-driven visualizations that can be shared and accessed through a web browser.

To use bokeh server for creating interactive plots with real_time updates, you will need to follow these steps:

1. INSTALL BOKEH : Make sure  you have bokeh library installed in your python environment.

2. IMPORT BOKEH MODULES : In your python script or jupyter notebook, import the necessory modules.

3. CREATE A BOKEH APPLICATION : Define your interactive  plot and the associated interactions within a function . This function will be the main application.

4. SERVER THE APPLICATION : You can start a bokeh server using the command line.

5. UPDATING DATA IN REAL-TIME: TO achieve real-time updates , you will need to set up a callback function that responds to user interactions or external data changes. This function will updates the data source of your plot , triggering the plot to update dynamically.

Q-5 How can you embed a bokeh plot into a web page or dashboard using flask or django?

ANs-5 Embedding a bokeh plot into a web page or dashboard using flask or django involves a few steps . Below are the basic outlines for both framework
"""

